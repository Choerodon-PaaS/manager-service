package io.choerodon.manager.api.eventhandler;

import org.junit.Test;

public class YamlTest {
    @Test
    public void name() {
        System.out.println( "choerodon:\n    gateway:\n        domain: '\"127.0.0.1:8963\"'\n        names: '\"llllll-service\"'\n    profiles:\n        active: '\"sit\"'\n    register:\n        executetTime: '\"100\"'\n    swagger:\n        client: '\"client\"'\n        fetch:\n            callBack: '\"true\"'\n            time: '\"10\"'\n        oauth-url: '\"http://localhost:8080/oauth/oauth/authorize\"'\n        skip:\n            service: '\"register-server, api-gateway, gateway-helper, oauth-server,\n                config-server, event-store-service\"'\neureka:\n    client:\n        serviceUrl:\n            defaultZone: '\"http://localhost:8000/eureka/\"'\n    instance:\n        leaseExpirationDurationInSeconds: '\"3\"'\n        leaseRenewalIntervalInSeconds: '\"1\"'\n        preferIpAddress: '\"true\"'\nhystrix:\n    stream:\n        queue:\n            enabled: '\"false\"'\nlogging:\n    level:\n        kafka:\n            admin:\n                AdminClient:\n                    AdminConfig: '\"ERROR\"'\n            server:\n                KafkaConfig: '\"ERROR\"'\n        org:\n            I0Itec:\n                zkclient: '\"ERROR\"'\n    pattern:\n        level: '\"%5p [manager-service,%X{X-B3-TraceId:-},%X{X-B3-SpanId:-},%X{X-Span-Export:-}]\"'\nmanagement:\n    port: '\"8964\"'\n    security:\n        enabled: '\"false\"'\nmybatis:\n    configuration:\n        mapUnderscoreToCamelCase: '\"true\"'\n    mapperLocations: '\"classpath*:/mapper/*.xml\"'\nsecurity:\n    basic:\n        enabled: '\"false\"'\n    ignored: '\"/swagger-ui.html,/swagger-resources/**, /webjars/** , /docs/**\"'\nserver:\n    port: '\"8963\"'\nspring:\n    aop:\n        proxyTargetClass: '\"true\"'\n    application:\n        name: '\"manager-service\"'\n    cloud:\n        bus:\n            enabled: '\"false\"'\n        stream:\n            bindings:\n                sleuth:\n                    content-type: '\"application/json\"'\n                    group: '\"sleuth\"'\n                springCloudBusOutput:\n                    content-type: '\"application/json\"'\n            default-binder: '\"kafka\"'\n            kafka:\n                binder:\n                    brokers: '\"127.0.0.1:9092\"'\n                    headers:\n                    - '\"spanId\"'\n                    - '\"spanTraceId\"'\n                    - '\"spanParentSpanId\"'\n                    - '\"spanProcessId\"'\n                    - '\"spanSampled\"'\n                    - '\"spanName\"'\n                    zkNodes: '\"127.0.0.1:2181\"'\n    datasource:\n        password: '\"******\"'\n        url: '\"jdbc:mysql://127.0.0.1/manager_service?useUnicode=true&characterEncoding=utf-8&useSSL=false\"'\n        username: '\"jcalaz\"'\n    kafka:\n        bootstrap-servers: '\"localhost:9092\"'\n        consumer:\n            auto-offset-reset: '\"latest\"'\n            group-id: '\"3322\"'\n            keyDeserializer: '\"org.apache.kafka.common.serialization.ByteArrayDeserializer\"'\n            valueDeserializer: '\"org.apache.kafka.common.serialization.ByteArrayDeserializer\"'\n        listener:\n            ack-mode: '\"record\"'\n            poll-timeout: '\"3000\"'\n        producer:\n            keySerializer: '\"org.apache.kafka.common.serialization.ByteArraySerializer\"'\n            value-serializer: '\"org.apache.kafka.common.serialization.ByteArraySerializer\"'\n            valueSerializer: '\"org.apache.kafka.common.serialization.ByteArraySerializer\"'\n    sleuth:\n        stream:\n            enabled: '\"false\"'\n");
    }
}
